% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/htsget.R
\name{htsget_reads}
\alias{htsget_reads}
\alias{BAMfields}
\alias{htsget_variants}
\title{Retrieve reads (BAM files) or variants (VCF files)}
\usage{
htsget_reads(
  granges,
  sample_id,
  url,
  ega = FALSE,
  token = NULL,
  fields = NULL,
  destination
)

BAMfields()

htsget_variants(granges, sample_id, url, token = NULL, destination)
}
\arguments{
\item{granges}{\code{GRanges()} instance with genomic coordinates for
retrieval. Coordinates follow Bioconductor standards (1-based,
closed intervals) and are translated to GA4GH coordinates
(0-based, half-open intervals).}

\item{sample_id}{\code{character(1)} sample identifier}

\item{url}{\code{character(1)} data resource url, excluding endpoint and
sample information.}

\item{fields}{\code{character()} of BAM fields to be included; default
(\code{NULL}) includes all fields.}

\item{destination}{\code{character(1)} file for output; must not exist.}
}
\value{
\code{htsget_reads()} return the path to a BAM file containing
the requested information.

\code{BAMfields()} returns a data.frame describing available
fields.

\code{htsget_variants()} returns a \code{character(1)} path to a VCF file
containing requested information.
}
\description{
Retrieve reads (BAM files) or variants (VCF files)
}
\examples{
gr <- GenomicRanges::GRanges("chr12:111766922-111817529")
sample_id <- "platinum/NA12878"
url <- "https://htsnexus.rnd.dnanex.us/v1"
fl <- tempfile(fileext=".bam")
bam <- htsget_reads(gr, sample_id, url, destination = fl)
Rsamtools::countBam(bam)

BAMfields()
fl <- tempfile(fileext=".bam")
fields <- c("RNAME", "POS", "CIGAR")
bam <- htsget_reads(gr, sample_id, url, fields, destination = fl)
names(Rsamtools::scanBam(bam)[[1]])

gr <- GenomicRanges::GRanges("12:112204691-112247789")
sample_id <- "1000genomes/20130502_autosomes"
url <- "https://htsnexus.rnd.dnanex.us/v1"
fl <- tempfile(fileext=".vcf")
vcf <- htsget_variants(gr, sample_id, url, destination = fl)
VariantAnnotation::readVcf(vcf)
}
